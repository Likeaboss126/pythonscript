import pdfplumber
import pandas as pd
from itertools import groupby

def extract_tables_from_unstructured_pdf(pdf_path, page_num):
    tables = []

    with pdfplumber.open(pdf_path) as pdf:
        page = pdf.pages[page_num]

        # Get all words with x, y positions
        words = page.extract_words(use_text_flow=True)

        # Group by 'top' (Y coordinate), rounded for tolerance
        lines = {}
        for w in words:
            y = round(w['top'], 1)
            lines.setdefault(y, []).append(w)

        # Sort lines top-down
        sorted_lines = sorted(lines.items(), key=lambda x: x[0])

        current_table = []
        for i, (y, line_words) in enumerate(sorted_lines):
            text_line = [w['text'] for w in sorted(line_words, key=lambda w: w['x0'])]

            # Detect table breaks using spacing patterns or row length changes
            if (
                current_table and
                (len(text_line) != len(current_table[-1]) or y - list(lines.keys())[i - 1] > 20)
            ):
                # New table detected, save current one
                if len(current_table) > 1:
                    tables.append(pd.DataFrame(current_table[1:], columns=current_table[0]))
                current_table = []

            current_table.append(text_line)

        # Save the last table
        if len(current_table) > 1:
            tables.append(pd.DataFrame(current_table[1:], columns=current_table[0]))

    return tables

# ğŸ”§ Usage
pdf_path = "fake_table_unstructured.pdf"  # Replace with your actual file
tables = extract_tables_from_unstructured_pdf(pdf_path, page_num=0)

# Display result
for i, df in enumerate(tables):
    print(f"\n--- Table {i+1} ---")
    print(df)
