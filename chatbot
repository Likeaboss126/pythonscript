import streamlit as st
import requests

st.set_page_config(page_title="API Dashboard", layout="wide")

# ---- Fake dashboard content ----
st.title("ðŸ“Š API Performance Dashboard")
st.line_chart({"response_time": [100, 120, 80, 90, 70]})

# ---- Initialize chat state ----
if "messages" not in st.session_state:
    st.session_state["messages"] = []

# ---- Custom CSS to float chat ----
st.markdown(
    """
    <style>
    .chat-container {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 320px;
        background: white;
        border: 1px solid #ddd;
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.15);
        z-index: 1000;
    }
    .chat-header {
        background: #2E86C1;
        color: white;
        padding: 8px;
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
        cursor: pointer;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# ---- Toggle open/close ----
if "chat_open" not in st.session_state:
    st.session_state["chat_open"] = False

if st.button("ðŸ’¬ Chatbot", key="chat_toggle"):
    st.session_state["chat_open"] = not st.session_state["chat_open"]

# ---- Chat window ----
if st.session_state["chat_open"]:
    with st.container():
        st.markdown('<div class="chat-container">', unsafe_allow_html=True)
        st.markdown('<div class="chat-header">Performance Bot</div>', unsafe_allow_html=True)

        # Show past messages
        for msg in st.session_state["messages"]:
            with st.chat_message(msg["role"]):
                st.write(msg["content"])

        # Input box
        if prompt := st.chat_input("Ask about API performance..."):
            st.session_state["messages"].append({"role": "user", "content": prompt})

            # ---- Call your Ollama backend ----
            r = requests.post(
                "http://localhost:11434/api/generate",
                json={"model": "llama-3.2-1b", "prompt": prompt},
                stream=False
            )
            reply = r.json()["message"]["content"]

            st.session_state["messages"].append({"role": "assistant", "content": reply})

            with st.chat_message("assistant"):
                st.write(reply)

        st.markdown("</div>", unsafe_allow_html=True)
