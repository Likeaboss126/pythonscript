openssl pkcs12 -export \
  -inkey client.key \
  -in client.crt \
  -certfile root.pem \
  -out client-keystore.p12 \
  -name client \
  -passout pass:changeit


keytool -import \
  -alias rootca \
  -file root.pem \
  -keystore root-truststore.p12 \
  -storetype PKCS12 \
  -storepass changeit \
  -noprompt

keytool -list -v -keystore client-keystore.p12 -storetype PKCS12 -storepass changeit
keytool -list -v -keystore root-truststore.p12 -storetype PKCS12 -storepass changeit

PrivateKeyEntry in client-keystore.p12

trustedCertEntry in root-truststore.p12

 System.setProperty("javax.net.ssl.keyStore", "client-keystore.p12");
        System.setProperty("javax.net.ssl.keyStoreType", "PKCS12");
        System.setProperty("javax.net.ssl.keyStorePassword", "changeit");

        System.setProperty("javax.net.ssl.trustStore", "root-truststore.p12");
        System.setProperty("javax.net.ssl.trustStoreType", "PKCS12");
        System.setProperty("javax.net.ssl.trustStorePassword", "changeit");

        // JDBC URL (replace with your values)
        String url = "jdbc:postgresql://your-db-host:5432/yourdb?ssl=true&sslmode=verify-ca";

        Properties props = new Properties();
        props.setProperty("user", "USERNAME");  // MUST match CN in client.crt

        try (Connection conn = DriverManager.getConnection(url, props)) {
            System.out.println("âœ… Connected successfully with SSL and client cert.");
        }



Run openssl x509 -in client.crt -noout -subject and ensure CN= matches JDBC user
