import streamlit as st
import sqlite3
import pandas as pd
import subprocess

DB_PATH = "health.db"

def get_latest_app_status():
    conn = sqlite3.connect(DB_PATH)
    query = '''
        SELECT
            hs.ApplicationName,
            MAX(hs.DateTime) AS DateTime,
            GROUP_CONCAT(hs.APIs, ', ') AS APIs,
            SUM(hs.Passed) AS Passed,
            SUM(hs.Failed) AS Failed,
            GROUP_CONCAT(hs.Error, '; ') AS Error
        FROM health_status hs
        INNER JOIN (
            SELECT ApplicationName, MAX(DateTime) AS MaxDateTime
            FROM health_status
            GROUP BY ApplicationName
        ) latest
        ON hs.ApplicationName = latest.ApplicationName AND hs.DateTime = latest.MaxDateTime
        GROUP BY hs.ApplicationName
        ORDER BY hs.ApplicationName;
    '''
    df = pd.read_sql_query(query, conn)
    conn.close()

    df["Status"] = df.apply(
        lambda row: "‚úÖ Passed" if row["Failed"] == 0 else f"‚ùå Failed - {row['Error']}",
        axis=1
    )
    return df["ApplicationName"].tolist(), df

def run_health_check_script():
    subprocess.run(["python", "health_checker.py"])

# Streamlit App
st.set_page_config(page_title="API Health Dashboard", layout="wide")
st.title("ü©∫ Application Health Checker")

if st.button("üîÑ Run Health Check Now"):
    st.info("Running health check script...")
    run_health_check_script()
    st.success("Done!")

df = get_latest_app_status()

if not df.empty:
    st.subheader("üìä Latest Health Check Summary")
    st.dataframe(df, use_container_width=True)
else:
    st.warning("No data found. Run the check to populate data.")
