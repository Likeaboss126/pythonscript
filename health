import streamlit as st
import sqlite3
import pandas as pd
import subprocess

DB_PATH = "health.db"

def get_latest_app_status():
    conn = sqlite3.connect(DB_PATH)
    query = """
        SELECT t1.*
        FROM health_status t1
        INNER JOIN (
            SELECT ApplicationName, MAX(DateTime) AS MaxDateTime
            FROM health_status
            GROUP BY ApplicationName
        ) t2
        ON t1.ApplicationName = t2.ApplicationName AND t1.DateTime = t2.MaxDateTime
        ORDER BY t1.ApplicationName
    """
    df = pd.read_sql_query(query, conn)
    conn.close()

    # Derive Status
    def derive_status(row):
        if row['Failed'] == 0:
            return "‚úÖ Passed"
        else:
            return f"‚ùå Failed - {row['Error']}"

    df["Status"] = df.apply(derive_status, axis=1)
    return df[["ApplicationName", "DateTime", "APIs", "Passed", "Failed", "Status"]]

def run_health_check_script():
    subprocess.run(["python", "health_checker.py"])

# Streamlit App
st.set_page_config(page_title="API Health Dashboard", layout="wide")
st.title("ü©∫ Application Health Checker")

if st.button("üîÑ Run Health Check Now"):
    st.info("Running health check script...")
    run_health_check_script()
    st.success("Done!")

df = get_latest_app_status()

if not df.empty:
    st.subheader("üìä Latest Health Check Summary")
    st.dataframe(df, use_container_width=True)
else:
    st.warning("No data found. Run the check to populate data.")
