import streamlit as st
import sqlite3
import pandas as pd
import subprocess

DB_PATH = "health.db"

def get_latest_app_status():
    query = '''
        WITH latest_runs AS (
            SELECT ApplicationName, MAX(DateTime) AS MaxDateTime
            FROM health_status
            GROUP BY ApplicationName
        ),
        latest_data AS (
            SELECT hs.*
            FROM health_status hs
            JOIN latest_runs lr
            ON hs.ApplicationName = lr.ApplicationName AND hs.DateTime = lr.MaxDateTime
        )
        SELECT *
        FROM latest_data
        ORDER BY ApplicationName, DateTime
    '''
    df = pd.read_sql_query(query, conn)
    conn.close()

    # Process status per application
    status_rows = []
    for app, group in df.groupby("ApplicationName"):
        failed_apis = group[(group["Passed"] == 0) & (group["Failed"] > 0)]
        error_msg = "; ".join(
            f"{row['APIs']}: {row['Error']}"
            for _, row in failed_apis.iterrows()
        )
        status = "✅ Passed" if failed_apis.empty else f"❌ Failed - {error_msg}"
        latest_time = group["DateTime"].max()
        total_passed = group["Passed"].sum()
        total_failed = group["Failed"].sum()

        status_rows.append({
            "ApplicationName": app,
            "DateTime": latest_time,
            "Passed": total_passed,
            "Failed": total_failed,
            "Error": error_msg,
            "Status": status
        })

    result_df = pd.DataFrame(status_rows)
    return result_df["ApplicationName"].tolist(), result_df

def run_health_check_script():
    subprocess.run(["python", "health_checker.py"])

# Streamlit App
st.set_page_config(page_title="API Health Dashboard", layout="wide")
st.title("🩺 Application Health Checker")

if st.button("🔄 Run Health Check Now"):
    st.info("Running health check script...")
    run_health_check_script()
    st.success("Done!")

df = get_latest_app_status()

if not df.empty:
    st.subheader("📊 Latest Health Check Summary")
    st.dataframe(df, use_container_width=True)
else:
    st.warning("No data found. Run the check to populate data.")
